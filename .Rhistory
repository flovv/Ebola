shiny::runApp()
View(content)
library(XML)
theurl <- "http://en.wikipedia.org/wiki/Ebola_virus_epidemic_in_West_Africa"
tables <- readHTMLTable(theurl)
tables$`Ebola cases and deaths by country and by date`
tables[[which.max(n.rows)]]
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
tables[[which.max(n.rows)]]
theurl <- "http://en.wikipedia.org/wiki/Ebola_virus_epidemic_in_West_Africa"
print("grap Wiki data!")
webpage <- getURL(theurl)
webpage <- readLines(tc <- textConnection(webpage)); close(tc)
pagetree <- htmlTreeParse(webpage, error=function(...){}, useInternalNodes = TRUE)
results <- xpathSApply(pagetree, "//*/table[@class='wikitable']/tr/td", xmlValue)
content <- as.data.frame(matrix(results, ncol=14 ,byrow = TRUE),stringsAsFactors=FALSE)
View(content)
content <- as.data.frame(matrix(results, ncol=16 ,byrow = TRUE),stringsAsFactors=FALSE)
View(content)
results <- xpathSApply(pagetree, "//*/table[@class='wikitable']/tr/td", xmlValue)
# Convert character vector to dataframe
## need to be changed if countries are added!
content <- as.data.frame(matrix(results, ncol=16 ,byrow = TRUE),stringsAsFactors=FALSE)
re <- getColNames()
cNames <- c("Date", re, "refs")
getColNames <- function(){
cNames <- c("Date","Cases" , "Deaths",  "Cases"  ,"Deaths"	,"Cases",	"Deaths",	"Cases"	,"Deaths"	,"Cases",	"Deaths",	"Cases",	"Deaths", "Refs")
countries <- c("Total",  "Guinea",	"Liberia",	"Sierra_Leone",	"Nigeria",	"Senegal")
#################################
## create Colnames!
re <- c()
for (i in countries){
re <- c(re, paste(i,"Cases", sep="_"), paste(i,"Deaths", sep="_"))
}
return(re)
}
re <- getColNames()
cNames <- c("Date", re, "refs")
colnames(content) <- cNames
for(i in re){
content[,i] <- gsub(",", "", content[,i], fixed = TRUE)
content[,i] <- as.numeric(content[,i])
}
##################################################
Sys.setlocale("LC_TIME", "English")
content$Date <- gsub("Sept", "Sep", content$Date, fixed = TRUE)
content$date <- as.Date(content$Date, "%d %b %Y")
############
content$Day  <- content$date-min(content$date)
View(content)
content <- as.data.frame(matrix(results, ncol=16 ,byrow = TRUE),stringsAsFactors=FALSE)
re <- getColNames()
cNames <- c("Date", re, "refs")
colnames(content) <- cNames
####################################
#str(content)
####
# change numbers!
####
for(i in re){
content[,i] <- gsub(",", "", content[,i], fixed = TRUE)
content[,i] <- as.numeric(content[,i])
}
##################################################
Sys.setlocale("LC_TIME", "English")
content$Date <- gsub("Sept", "Sep", content$Date, fixed = TRUE)
content$date <- as.Date(content$Date, "%d %b %Y")
############
content$Day  <- content$date-min(content$date)
View(content)
shiny::runApp()
shiny::runApp()
View(content)
results <- xpathSApply(pagetree, "//*/table[@class='wikitable']/tr/td", xmlValue)
theurl <- "http://en.wikipedia.org/wiki/Ebola_virus_epidemic_in_West_Africa"
print("grap Wiki data!")
webpage <- getURL(theurl)
webpage <- readLines(tc <- textConnection(webpage)); close(tc)
pagetree <- htmlTreeParse(webpage, error=function(...){}, useInternalNodes = TRUE)
# Extract table header and contents
results <- xpathSApply(pagetree, "//*/table[@class='wikitable']/tr/td", xmlValue)
theurl <- "http://en.wikipedia.org/wiki/Ebola_virus_epidemic_in_West_Africa"
tables <- readHTMLTable(theurl)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
tables$`Ebola cases and deaths by country and by date`
tablehead <- xpathSApply(pagetree, "//*/table[@class='wikitable']/tr/th", xmlValue)
results <- xpathSApply(pagetree, "//*/table[@class='wikitable']/tr/td", xmlValue)
content <- as.data.frame(matrix(results, ncol=14 ,byrow = TRUE),stringsAsFactors=FALSE)
View(content)
tablehead
library(XML)
theurl <- "http://en.wikipedia.org/wiki/Ebola_virus_epidemic_in_West_Africa"
tables <- readHTMLTable(theurl)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
tables$`Ebola cases and deaths by country and by date - 1 August to present.`
content <- tables$`Ebola cases and deaths by country and by date - 1 August to present.`
View(content)
colnames(content) <- content[1,]
content <- content[2:nrow(content),]
View(content)
content <- tables$`Ebola cases and deaths by country and by date - 1 August to present.`
colnames(content) <- t(content[1,])
View(content)
tables$`Ebola cases and deaths by country and by date - 1 August to present.`
tables <- readHTMLTable(theurl, header = T)
content <- tables$`Ebola cases and deaths by country and by date - 1 August to present.`
View(content)
content <- tables$`Ebola cases and deaths by country and by date - 1 August to present.`
content <- content[2:nrow(content),]
View(content)
getColNames <- function(){
cNames <- c("Date","Cases" , "Deaths",  "Cases"  ,"Deaths"	,"Cases",	"Deaths",	"Cases"	,"Deaths"	,"Cases",	"Deaths",	"Cases",	"Deaths","Cases",  "Deaths", "Refs")
countries <- c("Total",  "Guinea",	"Liberia",	"Sierra_Leone",	"Nigeria",	"Senegal", "US")
#################################
## create Colnames!
re <- c()
for (i in countries){
re <- c(re, paste(i,"Cases", sep="_"), paste(i,"Deaths", sep="_"))
}
return(re)
}
re <- getColNames()
cNames <- c("Date", re, "refs")
colnames(content) <- cNames
####################################
#str(content)
####
# change numbers!
####
for(i in re){
content[,i] <- gsub(",", "", content[,i], fixed = TRUE)
content[,i] <- as.numeric(content[,i])
}
##################################################
Sys.setlocale("LC_TIME", "English")
content$Date <- gsub("Sept", "Sep", content$Date, fixed = TRUE)
content$date <- as.Date(content$Date, "%d %b %Y")
############
content$Day  <- content$date-min(content$date)
View(content)
tables$`Archived Ebola cases and deaths by country. - 22 March to 30 July`
getColNamesOld <- function(){
#cNames <- c("Date","Cases" , "Deaths",  "Cases"  ,"Deaths"  ,"Cases",	"Deaths",	"Cases"	,"Deaths"	,"Cases",	"Deaths",	"Cases",	"Deaths","Cases",  "Deaths", "Refs")
countries <- c("Total",  "Guinea",	"Liberia",	"Sierra_Leone",	"Nigeria",	"Senegal")
#################################
## create Colnames!
re <- c()
for (i in countries){
re <- c(re, paste(i,"Cases", sep="_"), paste(i,"Deaths", sep="_"))
}
return(re)
}
content2 <- tables$`Archived Ebola cases and deaths by country. - 22 March to 30 July`
content2 <- content2[2:nrow(content2),]
re <- getColNamesOld()
cNames <- c("Date", re, "refs")
colnames(content2) <- cNames
View(content2)
library(gtools)
content<- smartbind(content, content2)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("XML")
install.packages("minpack.lm")
install.packages("RCurl")
shiny::runApp()
theurl <- "http://en.wikipedia.org/wiki/Ebola_virus_epidemic_in_West_Africa"
print("grap Wiki data!")
tables <- readHTMLTable(theurl)
#n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
content <- tables$`Ebola cases and deaths by country and by date – 1 August to most recent WHO update`
content2 <- tables$`Archived Ebola cases and deaths by country – 22 March to 30 July`
content2 <- content2[2:nrow(content2),]
re <- getColNamesOld()
getColNamesOld <- function(){
#cNames <- c("Date","Cases" , "Deaths",  "Cases"  ,"Deaths"  ,"Cases",	"Deaths",	"Cases"	,"Deaths"	,"Cases",	"Deaths",	"Cases",	"Deaths","Cases",  "Deaths", "Refs")
countries <- c("Total",  "Guinea",	"Liberia",	"Sierra_Leone",	"Nigeria",	"Senegal")
#################################
## create Colnames!
re <- c()
for (i in countries){
re <- c(re, paste(i,"Cases", sep="_"), paste(i,"Deaths", sep="_"))
}
return(re)
}
getColNames <- function(){
cNames <- c("Date","Cases" , "Deaths",  "Cases"  ,"Deaths"	,"Cases",	"Deaths",	"Cases"	,"Deaths"	,"Cases",	"Deaths",	"Cases",	"Deaths","Cases",  "Deaths", "Refs")
countries <- c("Total",  "Guinea",	"Liberia",	"Sierra_Leone",	"Nigeria",	"Senegal", "US")
#################################
## create Colnames!
re <- c()
for (i in countries){
re <- c(re, paste(i,"Cases", sep="_"), paste(i,"Deaths", sep="_"))
}
return(re)
}
re <- getColNamesOld()
cNames <- c("Date", re, "refs")
colnames(content2) <- cNames
#colnames(content) <- t(content[1,])
content <- content[2:nrow(content),]
re <- getColNames()
cNames <- c("Date", re, "refs")
colnames(content) <- cNames
for(i in re){
content[,i] <- gsub(",", "", content[,i], fixed = TRUE)
content[,i] <- as.numeric(content[,i])
}
##################################################
Sys.setlocale("LC_TIME", "English")
content$Date <- gsub("Sept", "Sep", content$Date, fixed = TRUE)
content$date <- as.Date(content$Date, "%d %b %Y")
############
content$Day  <- content$date-min(content$date)
View(content)
View(content)
shiny::runApp()
shiny::runApp()
theurl <- "http://en.wikipedia.org/wiki/Ebola_virus_epidemic_in_West_Africa"
tables <- readHTMLTable(theurl)
tables[4]
tables$Ebola cases and deaths by country and by date – 1 August to most recent WHO update
tables[,4]$Ebola cases and deaths by country and by date – 1 August to most recent WHO update
tables[,4]#$Ebola cases and deaths by country and by date – 1 August to most recent WHO update
tables[4]#$Ebola cases and deaths by country and by date – 1 August to most recent WHO update
tables[5]#$Ebola cases and deaths by country and by date – 1 August to most recent WHO update
tables[6]#$Ebola cases and deaths by country and by date – 1 August to most recent WHO update
tables[7]#$Ebola cases and deaths by country and by date – 1 August to most recent WHO update
str(tables)
names(tables)
colnames(tables)
names(sapply(tables, names))
listNames <- names(sapply(tables, names))
grep("Ebola cases and deaths", listNames)
grep("Ebola cases and deaths", listNames)[1]
shiny::runApp()
theurl <- "http://en.wikipedia.org/wiki/Ebola_virus_epidemic_in_West_Africa"
print("grap Wiki data!")
tables <- readHTMLTable(theurl)
listNames <- names(sapply(tables, names))
index <- grep("Ebola cases and deaths", listNames)[1]
content <- tables[index] #tables$`Ebola cases and deaths by country and by date – 1 August to most recent WHO update`
tables[index]
content <- as.data.frame(tables[index]) #tables$`Ebola cases and deaths by country and by date – 1 August to most recent WHO update`
View(content)
content <- content[2:nrow(content),]
re <- getColNames()
cNames <- c("Date", re, "refs")
colnames(content) <- cNames
getColNames <- function(){
cNames <- c("Date","Cases" , "Deaths",  "Cases"  ,"Deaths"	,"Cases",	"Deaths",	"Cases"	,"Deaths"	,"Cases",	"Deaths",	"Cases",	"Deaths","Cases",  "Deaths", "Refs")
countries <- c("Total",  "Guinea",	"Liberia",	"Sierra_Leone",	"Nigeria",	"Senegal", "US")
#################################
## create Colnames!
re <- c()
for (i in countries){
re <- c(re, paste(i,"Cases", sep="_"), paste(i,"Deaths", sep="_"))
}
return(re)
}
content <- content[2:nrow(content),]
re <- getColNames()
cNames <- c("Date", re, "refs")
colnames(content) <- cNames
View(content)
for(i in re){
content[,i] <- gsub(",", "", content[,i], fixed = TRUE)
content[,i] <- as.numeric(content[,i])
}
##################################################
Sys.setlocale("LC_TIME", "English")
content$Date <- gsub("Sept", "Sep", content$Date, fixed = TRUE)
content$date <- as.Date(content$Date, "%d %b %Y")
############
content$Day  <- content$date-min(content$date)
View(content)
shiny::runApp()
